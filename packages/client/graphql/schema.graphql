type AuthBody {
	accessToken: String!
	tokenType: String!
}


input Credentials {
	email: String!
	password: String!
}

input Filter {
	field: String!
	value: String!
	operator: String!
}




type Model {
	id: UUID!
	title: String!
	description: String!
	userId: UUID!
}

type MutationRoot {
	createTodo: Todo!
}

type PaginatedResult {
	data: [Model!]!
	numItems: Int!
	numPages: Int!
	page: Int!
	pageItems: Int!
}

type QueryRoot {
	todos(page: Int, limit: Int, filters: [Filter!]): PaginatedResult!
	login(credentials: Credentials!): AuthBody!
}


type Todo {
	id: ID!
}

"""
A UUID is a unique 128-bit number, stored as 16 octets. UUIDs are parsed as
Strings within GraphQL. UUIDs are used to assign unique identifiers to
entities without requiring a central allocating authority.

# References

* [Wikipedia: Universally Unique Identifier](http://en.wikipedia.org/wiki/Universally_unique_identifier)
* [RFC4122: A Universally Unique IDentifier (UUID) URN Namespace](http://tools.ietf.org/html/rfc4122)
"""
scalar UUID

schema {
	query: QueryRoot
	mutation: MutationRoot
}
